@model IEnumerable<ASP.netcore_Project.Models.OrderModel>

@{
    ViewData["Title"] = "My Orders";
}

<div class="container mt-5">
    <div class="card shadow-lg border border-light rounded-4 p-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="text-3xl fw-semibold text-dark">Your Orders</h1>
            <nav class="text-sm">
                <a href="/" class="text-primary text-decoration-none">Home</a> &gt; Order History
            </nav>
        </div>

        @if (!Model.Any())
        {
            <div class="text-center py-5">
                <i class="bi bi-bag-x" style="font-size: 3rem; color: #6c757d;"></i>
                <h4 class="mt-3">No orders found</h4>
                <p class="text-muted">You haven't placed any orders yet.</p>
                <a href="/Shop/Shop" class="btn btn-primary mt-3">Start Shopping</a>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table align-middle">
                    <thead class="bg-light">
                        <tr>
                            <th class="py-3 text-secondary fw-medium">Products</th>
                            <th class="py-3 text-secondary fw-medium">Shipping Address</th>
                            <th class="py-3 text-secondary fw-medium">Date</th>
                            <th class="py-3 text-secondary fw-medium">Status</th>
                            <th class="py-3 text-end text-secondary fw-medium">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model.OrderByDescending(o => o.OrderDate))
                        {
                            <tr class="table-row-hover" onclick="window.location.href='/Profile/OrderDetail/@order.Id'" style="cursor: pointer;">
                                <td>
                                    <div class="d-flex flex-column gap-2">
                                        @foreach (var item in order.Items)
                                        {
                                            <div class="d-flex align-items-center gap-3">
                                                <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "/images/products/placeholder.jpg" : item.ImageUrl)"
                                                     alt="@item.Name"
                                                     class="rounded shadow-sm border"
                                                     style="width: 56px; height: 56px; object-fit: cover; transition: transform 0.2s ease-in-out;"
                                                     onmouseover="this.style.transform='scale(1.05)'"
                                                     onmouseout="this.style.transform='scale(1)'"/>
                                                <div>
                                                    <div class="fw-medium text-dark">@item.Name</div>
                                                    <div class="text-muted small">Qty: @item.Quantity</div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </td>
                                <td class="text-dark small">
                                    @order.ShippingInfo.Address,<br />
                                    @order.ShippingInfo.City,<br />
                                    @order.ShippingInfo.State @order.ShippingInfo.ZipCode
                                </td>
                                <td class="text-dark small">
                                    @order.OrderDate.ToString("MMM dd, yyyy")
                                </td>
                                <td>
                                    <span class="px-3 py-1 text-xs fw-semibold rounded-pill 
                                        @(order.Status.ToLower() switch {
                                            "delivered" => "bg-success bg-opacity-25 text-success",
                                            "processing" => "bg-primary bg-opacity-25 text-primary",
                                            "cancelled" => "bg-danger bg-opacity-25 text-danger",
                                            "pending" => "bg-warning bg-opacity-25 text-dark",
                                            _ => "bg-secondary bg-opacity-25 text-dark"
                                        })">
                                        @order.Status
                                    </span>
                                </td>
                                <td class="text-end fw-semibold text-dark">
                                    â‚¹@order.OrderTotal.ToString("0.00")
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>
