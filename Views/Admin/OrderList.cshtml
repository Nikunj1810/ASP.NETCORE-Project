@{
    ViewBag.Title = "Orders List";
    Layout = "~/Views/Shared/Adminlayout.cshtml";
}

<style>
    .order-card {
        border: 1px solid #e0e0e0;
        border-radius: 16px;
        padding: 1.5rem;
        background-color: #fff;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s;
    }

    .order-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.08);
    }

    .order-badge {
        padding: 5px 12px;
        font-size: 0.85rem;
        border-radius: 20px;
        font-weight: 500;
    }

    .order-table th, .order-table td {
        vertical-align: middle;
    }

    .breadcrumb {
        font-size: 0.95rem;
        color: #6c757d;
    }

    .breadcrumb a {
        color: #007bff;
        text-decoration: none;
    }

    .breadcrumb a:hover {
        text-decoration: underline;
    }

    .order-actions {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }
</style>

<div class="container py-5">
    <div class="breadcrumb mb-4">
        <a href="@Url.Action("Dashboard", "Admin")">Dashboard</a> &gt; <span>Order List</span>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
        TempData.Remove("SuccessMessage");
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
        TempData.Remove("ErrorMessage");
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="fw-bold text-dark">Recent Purchases</h3>
        <form method="get" action="@Url.Action("OrderList", "Admin")" class="d-flex">
            <select name="status" class="form-select me-2">
                <option value="">All Orders</option>
                <option value="pending" selected="@(ViewBag.CurrentStatus == "pending")">Pending</option>
                <option value="processing" selected="@(ViewBag.CurrentStatus == "processing")">Processing</option>
                <option value="shipped" selected="@(ViewBag.CurrentStatus == "shipped")">Shipped</option>
                <option value="delivered" selected="@(ViewBag.CurrentStatus == "delivered")">Delivered</option>
                <option value="cancelled" selected="@(ViewBag.CurrentStatus == "cancelled")">Cancelled</option>
            </select>
            <button type="submit" class="btn btn-dark">Filter</button>
        </form>
    </div>

    <form id="bulkUpdateForm" method="post" action="@Url.Action("UpdateOrderStatus", "Admin")">
        <div class="mb-3 order-actions">
            <select name="status" class="form-select" style="width: 200px;">
                <option value="">Select Status</option>
                <option value="pending">Pending</option>
                <option value="processing">Processing</option>
                <option value="shipped">Shipped</option>
                <option value="delivered">Delivered</option>
                <option value="cancelled">Cancelled</option>
            </select>
            <button type="submit" class="btn btn-primary" id="bulkUpdateBtn" disabled>Update Selected Orders</button>
        </div>

        <div class="order-card mb-4">
            <div class="table-responsive">
                <table class="table table-hover order-table mb-0">
                    <thead class="table-light">
                        <tr>
                            <th><input type="checkbox" id="selectAll" /></th>
                            <th>Product</th>
                            <th>Order ID</th>
                            <th>Date</th>
                            <th>Customer Name</th>
                            <th>Status</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr class="order-row" data-order-id="@order.Id">
                                <td onclick="event.stopPropagation()">
                                    <input type="checkbox" name="orderIds" value="@order.Id" class="order-checkbox" />
                                </td>
                                <td>@(order.Items.Count > 0 ? order.Items[0].Name : "N/A")</td>
                                <td>@order.Id</td>
                                <td>@order.OrderDate.ToString("MM/dd/yyyy")</td>
                                <td>@(order.ShippingInfo?.FullName ?? "N/A")</td>
                                <td>
                                    <span class="order-badge bg-@(
                                        order.Status == "delivered" ? "success" :
                                        order.Status == "cancelled" ? "danger" :
                                        order.Status == "shipped" ? "info" :
                                        "warning"
                                    ) text-white">@order.Status</span>
                                </td>
                                <td>₹@order.OrderTotal.ToString("N2")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </form>

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item"><a class="page-link" href="#">«</a></li>
            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">»</a></li>
        </ul>
    </nav>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const rows = document.querySelectorAll('.order-row');
        rows.forEach(row => {
            row.addEventListener('click', function (e) {
                if (e.target.type !== 'checkbox') {
                    const orderId = this.dataset.orderId;
                    window.location.href = '@Url.Action("OrderDetail", "Admin")?orderId=' + orderId;
                }
            });
        });

        const selectAll = document.getElementById('selectAll');
        const checkboxes = document.querySelectorAll('.order-checkbox');
        const bulkBtn = document.getElementById('bulkUpdateBtn');

        selectAll.addEventListener('change', function () {
            checkboxes.forEach(cb => cb.checked = this.checked);
            updateBulkButtonState();
        });

        checkboxes.forEach(cb => {
            cb.addEventListener('change', function () {
                updateBulkButtonState();
                const allChecked = [...checkboxes].every(c => c.checked);
                const noneChecked = [...checkboxes].every(c => !c.checked);
                selectAll.checked = allChecked;
                selectAll.indeterminate = !allChecked && !noneChecked;
            });
        });

        function updateBulkButtonState() {
            const anyChecked = [...checkboxes].some(cb => cb.checked);
            bulkBtn.disabled = !anyChecked;
        }
    });
</script>
