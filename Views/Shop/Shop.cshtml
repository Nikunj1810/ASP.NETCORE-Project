@model List<ASP.netcore_Project.Models.ProductModel>

@{
    ViewData["Title"] = "Shop";
    var isLoggedIn = Context.Session.GetString("UserId") != null;
}

<!-- Bootstrap & FontAwesome -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
<style>
      .discount-badge {
       
        color: green;
        font-size: 1rem;
        border-radius: 5px;
    }
</style>
<div class="container mt-4">
    <div class="row">
        <!-- Filters Section -->
        <aside class="col-md-3 mb-4">
            <div class="card shadow-sm p-3">
                <h4 class="fw-bold mb-3">Filters</h4>

                <!-- Price Range Filter -->
                <div class="mb-4">
                    <h6 class="fw-semibold">Price Range</h6>
                    <input type="range" class="form-range" min="0" max="10000" step="100" value="5000" id="priceRange">
                    <p class="text-muted">₹0 - ₹<span id="priceValue">5000</span></p>
                </div>

                <!-- Gender Filter -->
                <div class="mb-4">
                    <h6 class="fw-semibold">Gender</h6>
                    <div class="d-flex gap-2">
                        <a href="@Url.Action("Shop", new { gender = "Men" })" 
                           class="btn @(ViewBag.SelectedGender == "Men" ? "btn-dark" : "btn-outline-dark") flex-grow-1">
                            <i class="fas fa-male me-1"></i> Men
                        </a>
                        <a href="@Url.Action("Shop", new { gender = "Women" })" 
                           class="btn @(ViewBag.SelectedGender == "Women" ? "btn-dark" : "btn-outline-dark") flex-grow-1">
                            <i class="fas fa-female me-1"></i> Women
                        </a>
                    </div>
                    @if (ViewBag.SelectedGender != null)
                    {
                        <div class="mt-2">
                            <a href="@Url.Action("Shop")" class="btn btn-sm btn-light">
                                <i class="fas fa-times me-1"></i> Clear Filter
                            </a>
                        </div>
                    }
                </div>

                <!-- Categories Filter -->
                <div>
                    <h6 class="fw-semibold">Categories</h6>
                    <ul class="list-unstyled">
                        @foreach (var category in ViewBag.Categories)
                        {
                            <li>
                                <a href="@Url.Action("Shop", new { gender = ViewBag.SelectedGender, category = category })" 
                                   class="btn btn-sm @(ViewBag.SelectedCategory == category ? "btn-primary" : "btn-outline-primary") mb-2">
                                    @category
                                </a>
                            </li>
                        }
                    </ul>
                    @if (ViewBag.SelectedCategory != null)
                    {
                        <div class="mt-2">
                            <a href="@Url.Action("Shop", new { gender = ViewBag.SelectedGender })" class="btn btn-sm btn-light">
                                <i class="fas fa-times me-1"></i> Clear Category
                            </a>
                        </div>
                    }
                </div>
            </div>
        </aside>

        <!-- Products Section -->
        <main class="col-md-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold">Explore Products</h2>
                <select class="form-select w-auto border-primary text-primary">
                    <option>Sort by Name</option>
                    <option>Sort by Price</option>
                </select>
            </div>

            <div class="row g-4" id="product-grid">
                @if (Model != null && Model.Count > 0)
                {
                    @await Html.PartialAsync("_ProductGrid", Model)
                }
                else
                {
                    <div class="col-12">
                        <div class="alert alert-warning text-center shadow-sm">
                            <i class="fas fa-box-open me-2"></i> No products available.
                        </div>
                    </div>
                }
            </div>
            <div id="loading" class="text-center d-none my-4">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </main>
    </div>
</div>

<!-- Bootstrap JS & Price Range Script -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let currentPage = @ViewBag.CurrentPage;
    let loading = false;
    let hasMore = @Json.Serialize(ViewBag.HasMoreProducts);
    const gender = '@ViewBag.SelectedGender';
    const category = '@ViewBag.SelectedCategory';

    const range = document.getElementById('priceRange');
    const value = document.getElementById('priceValue');
    range.addEventListener('input', () => {
        value.textContent = range.value;
    });

    // Check login before form submit
    function checkLogin() {
        var isLoggedIn = '@isLoggedIn' === 'True';
        if (!isLoggedIn) {
            alert("Please login first to add items to the cart.");
            window.location.href = "/Account/Login";
            return false;
        }
        return true;
    }

    // Infinite scroll functionality
    $(window).scroll(function() {
        if (loading || !hasMore) return;

        if ($(window).scrollTop() + $(window).height() > $(document).height() - 200) {
            loadMoreProducts();
        }
    });

    function loadMoreProducts() {
        loading = true;
        currentPage++;
        $('#loading').removeClass('d-none');

        $.ajax({
            url: '/Shop/Shop',
            data: {
                page: currentPage,
                gender: gender,
                category: category
            },
            headers: { "X-Requested-With": "XMLHttpRequest" },
            success: function(data) {
                if (data.trim()) {
                    $('#product-grid').append(data);
                    hasMore = $(data).children().length === 12; // 12 is the page size
                } else {
                    hasMore = false;
                }
            },
            complete: function() {
                loading = false;
                $('#loading').addClass('d-none');
            }
        });
    }
</script>
