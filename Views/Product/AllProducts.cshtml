@model List<ASP.netcore_Project.Models.ProductModel>
@{
    ViewData["Title"] = "All Products";
    Layout = "~/Views/Shared/Adminlayout.cshtml";
}

<style>
    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-in-out;
    }

    .product-image {
        height: 300px;
        object-fit: cover;
        transition: transform 0.3s;
        border-radius: 1rem 1rem 0 0;
    }

    .product-card:hover .product-image {
        transform: scale(1.05);
    }

    /* Custom Toast Styling */
    .toast-center {
        top: 50% !important;
        left: 50% !important;
        transform: translate(-50%, -50%) !important;
    }
    #toast-container > .toast {
        background-color: #ffffff !important;
        color: #333 !important;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;
        padding: 15px !important;
        border-radius: 8px !important;
        opacity: 1 !important;
    }
    #toast-container > .toast-warning {
        background-image: none !important;
    }
</style>

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">ðŸ›’ All Products</h2>
        <a href="@Url.Action("AddProduct", "Product")" class="btn btn-success rounded-pill px-4">
            <i class="fas fa-plus me-2"></i> Add New Product
        </a>
    </div>

    <div class="row g-3 mb-4">
        <div class="col-md-8">
            <div class="input-group shadow-sm rounded">
                <input type="text" class="form-control" placeholder="Search products by name or category" />
                <button class="btn btn-outline-dark"><i class="fas fa-search"></i></button>
            </div>
        </div>
        <div class="col-md-4 text-end">
            <div class="dropdown">
                <button class="btn btn-outline-dark dropdown-toggle" type="button" data-bs-toggle="dropdown">
                    Filter
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" href="#">All Products</a></li>
                    <li><a class="dropdown-item" href="#">Checked Products (0)</a></li>
                </ul>
            </div>
        </div>
    </div>

    <div class="row g-4">
        @if (Model != null && Model.Count > 0)
        {
            foreach (var product in Model)
            {
                <div class="col-12 col-sm-6 col-lg-4">
                    <div class="card border-0 shadow-sm product-card rounded-xl h-100">
                        <a asp-controller="Product" asp-action="ProductDetail" asp-route-id="@product.Id" class="text-decoration-none">
                            <img src="@(product.ImageUrls?.FirstOrDefault() ?? "/images/products/default.jpg")" class="product-image w-100" alt="@product.Name" />
                        </a>

                        <div class="card-body">
                            <h5 class="card-title fw-semibold text-dark">@product.Name</h5>
                            <p class="text-muted mb-1">Brand: <strong>@product.Brand</strong></p>
                            <p class="text-muted small mb-2">Category: <strong>@product.Category</strong></p>
                            <div class="d-flex align-items-center gap-2 mb-2">
                                <span class="text-success fw-bold fs-5">â‚¹@product.Price</span>
                                @if (product.OriginalPrice > product.Price)
                                {
                                    <span class="text-muted text-decoration-line-through">â‚¹@product.OriginalPrice</span>
                                }
                            </div>
                        </div>

                        <div class="card-footer bg-white border-top-0 d-flex justify-content-between px-3 pb-3">
                            <a asp-action="EditProduct" asp-controller="Product" asp-route-id="@product.Id"
                               class="btn btn-sm btn-outline-primary rounded-pill px-3">
                                <i class="fas fa-edit me-1"></i>Edit
                            </a>
                            <button type="button" 
                               class="btn btn-sm btn-outline-danger rounded-pill px-3 delete-product-btn"
                               data-product-id="@product.Id"
                               data-product-name="@product.Name">
                                <i class="fas fa-trash me-1"></i>Delete
                            </button>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-warning text-center shadow-sm">
                    <i class="fas fa-box-open me-2"></i> No products found.
                </div>
            </div>
        }
    </div>

@section Scripts {
    <script>
        // Make deleteProduct function globally accessible
        function deleteProduct(productId) {
            $.ajax({
                url: '/Product/DeleteProduct/' + productId,
                type: 'POST',
                success: function(response) {
                    toastr.clear();
                    if (response.success) {
                        toastr.success(response.message);
                        setTimeout(function() {
                            location.reload();
                        }, 1500);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function() {
                    toastr.clear();
                    toastr.error('An error occurred while deleting the product. Please try again.');
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            const deleteButtons = document.querySelectorAll('.delete-product-btn');
            
            // Configure toastr defaults
            toastr.options = {
                positionClass: 'toast-center',
                closeButton: false,
                timeOut: 0,
                extendedTimeOut: 0,
                tapToDismiss: false,
                escapeHtml: false
            };
            
            deleteButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const productId = this.dataset.productId;
                    const productName = this.dataset.productName;
                    
                    // Show confirmation toast
                    toastr.warning(
                        `<div class="d-flex flex-column">
                            <p class="mb-3">Are you sure you want to delete this product?</p>
                            <div class="d-flex justify-content-end gap-2">
                                <button class="btn btn-sm btn-secondary" onclick="toastr.clear()">Cancel</button>
                                <button class="btn btn-sm btn-danger" onclick="deleteProduct('${productId}')">Delete</button>
                            </div>
                        </div>`,
                        'Confirm Delete'
                    );
                });
            });
        });
    </script>
}
</div>
