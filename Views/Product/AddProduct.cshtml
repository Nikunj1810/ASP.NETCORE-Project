@model ASP.netcore_Project.Models.ProductModel
@{
    var isEdit = ViewBag.IsEdit != null && (bool)ViewBag.IsEdit;
    ViewData["Title"] = isEdit ? "Edit Product" : "Add Product";
    Layout = "~/Views/Shared/Adminlayout.cshtml";

    var categoryModel = new ASP.netcore_Project.Models.CategoryModel();
    var categories = categoryModel.GetAllCategories();
    
    // Initialize Model if it's null to prevent NullReferenceException
    // if (Model == null)
    // {
    //     Model = new ASP.netcore_Project.Models.ProductModel
    //     {
    //         Sizes = new List<ASP.netcore_Project.Models.SizeModel>(),
        //         SizeType = "standard",
    //         ImageUrl = ""
    //     };
    // }
}

<style>
    body {
        background-color: #f8f9fa;
    }

    .container {
        margin-top: 20px;
    }

    .breadcrumb {
        font-size: 14px;
        color: #6c757d;
    }

    .card {
        padding: 20px;
    }

    .upload-box {
        border: 2px dashed #ddd;
        border-radius: 10px;
        text-align: center;
        padding: 40px;
        color: #6c757d;
    }

    .form-control, .form-select {
        border-radius: 5px;
    }

    .btn-upload {
        width: 100%;
        margin-top: 10px;
    }
</style>

<div class="container">
    <!-- Breadcrumb -->
    <div class="breadcrumb mb-2">
        <a href="#" class="text-decoration-none text-secondary">Home</a> >
        <a href="@Url.Action("AllProducts", "Product")" class="text-decoration-none text-secondary">All Products</a> >
        <span class="fw-bold">@ViewData["Title"]</span>
    </div>

    <h3 class="fw-bold">@ViewData["Title"] Details</h3>

    <!-- Tabs -->
    <ul class="nav nav-tabs mb-3">
        <li class="nav-item">
            <a class="nav-link active">@ViewData["Title"] Details</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Category" asp-action="CategoryManager">Manage Categories</a>
        </li>
    </ul>

    <!-- Form -->
    <div class="card">
        <div class="row">
            <div class="col-md-8">
                <form asp-controller="Product" asp-action="AddProduct" method="post" enctype="multipart/form-data" id="productForm">
                    <input type="hidden" asp-for="Id" />

                    <!-- Name -->
                    <label asp-for="Name" class="mt-2">Product Name</label>
                    <input asp-for="Name" class="form-control" placeholder="Type name here" maxlength="50" />
                    <span asp-validation-for="Name" class="text-danger"></span>

                    <!-- Description -->
                    <label asp-for="Description" class="mt-2">Description</label>
                    <textarea asp-for="Description" class="form-control" rows="6" placeholder="Type description here" style="min-height:150px;"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>

                    <!-- Gender -->
                    <label asp-for="Gender" class="mt-2">Gender</label>
                    <select asp-for="Gender" class="form-select">
                        <option value="">Select gender</option>
                        <option value="Men">Men</option>
                        <option value="Women">Women</option>
                    </select>
                    <span asp-validation-for="Gender" class="text-danger"></span>

                    <!-- Category -->
                    <label asp-for="Category" class="mt-2">Category</label>
                    <select asp-for="Category" class="form-select">
                        <option value="">Select a category</option>
                        @foreach (var category in categories)
                        {
                            <option value="@category" selected="@(Model.Category == category)">
                                @category
                            </option>
                        }
                    </select>
                    <span asp-validation-for="Category" class="text-danger"></span>

                    <!-- Brand -->
                    <label asp-for="Brand" class="mt-2">Brand Name</label>
                    <input asp-for="Brand" class="form-control" placeholder="Type brand name here" maxlength="50" />
                    <span asp-validation-for="Brand" class="text-danger"></span>

                    <!-- SKU & Stock -->
                    <div class="row">
                        <div class="col-md-6">
                            <label asp-for="Sku" class="mt-2">SKU</label>
                            <input asp-for="Sku" class="form-control" placeholder="e.g. PROD-123" maxlength="50" />
                            <span asp-validation-for="Sku" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="StockQuantity" class="mt-2">Stock Quantity</label>
                            <input asp-for="StockQuantity" id="StockQuantity" class="form-control" min="0" readonly />
                            <span asp-validation-for="StockQuantity" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Price & Original -->
                    <div class="row">
                        <div class="col-md-6">
                            <label asp-for="Price" class="mt-2">Price</label>
                            <input asp-for="Price" class="form-control" step="0.01" min="0" />
                            <span asp-validation-for="Price" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="OriginalPrice" class="mt-2">Original Price</label>
                            <input asp-for="OriginalPrice" class="form-control" step="0.01" min="0" />
                            <span asp-validation-for="OriginalPrice" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Discount -->
                    <label asp-for="DiscountPercentage" class="mt-2">Discount (%)</label>
                    <input asp-for="DiscountPercentage" class="form-control" step="0.01" min="0" max="100" />
                    <span asp-validation-for="DiscountPercentage" class="text-danger"></span>

                    <!-- Size Type -->
                    <label asp-for="SizeType" class="mt-2">Size Type</label>
                    <select asp-for="SizeType" class="form-select">
                        <option value="">Select size type</option>
                        <option value="standard" selected="@(Model.SizeType == "standard")">Standard</option>
                        <option value="waist" selected="@(Model.SizeType == "waist")">Waist</option>
                    </select>
                    <span asp-validation-for="SizeType" class="text-danger"></span>

                    <!-- Sizes -->
                    <label class="mt-2">Sizes</label>
                    <div id="sizesContainer" class="mb-3">
                        @{
                            if (Model.Sizes != null && Model.Sizes.Count > 0)
                            {
                                for (int i = 0; i < Model.Sizes.Count; i++)
                                {
                                    <div class="input-group mb-2 size-input">
                                        <input type="text" name="Sizes[@i].Size" class="form-control" value="@Model.Sizes[i].Size" placeholder="Enter size" required />
                                        <input type="number" name="Sizes[@i].Quantity" class="form-control" value="@Model.Sizes[i].Quantity" placeholder="Quantity" required min="0" />
                                        <button type="button" class="btn btn-danger btn-sm remove-size">âœ•</button>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="input-group mb-2 size-input">
                                    <input type="text" name="Sizes[0].Size" class="form-control" placeholder="Enter size" required />
                                    <input type="number" name="Sizes[0].Quantity" class="form-control" placeholder="Quantity" required min="0" />
                                    <button type="button" class="btn btn-danger btn-sm remove-size">âœ•</button>
                                </div>
                            }
                        }
                    </div>
                    <button type="button" class="btn btn-secondary btn-sm mb-3" id="addSizeBtn">+ Add Size</button>
                    <!-- Image Upload -->
                    <label class="mt-2">Product Image</label>
                    <div class="upload-box" id="dropZone">
                        <span>ðŸ“¤</span>
                        <p>Drop your image here, or browse</p>
                        <small class="text-muted">JPEG, PNG allowed</small>

                        <!-- File Input (optional if editing) -->
                        <input type="file" name="imageFile" id="fileInput" class="form-control mt-2" accept="image/jpeg,image/png" @(ViewBag.IsEdit != null && (bool)ViewBag.IsEdit ? "" : "required") />

                        <!-- Hidden input to retain old image if not changed -->
                        <input type="hidden" name="ImageUrl" value="@Model.ImageUrl" />

                        <!-- Preview the existing image (if any) -->
                        <div id="imagePreview" class="mt-3" style="@(string.IsNullOrEmpty(Model.ImageUrl) ? "display:none;" : "")">
                            <img id="preview" src="@Model.ImageUrl" alt="Preview" style="max-width: 100%; max-height: 200px;" />
                        </div>
                    </div>


                    <!-- New Arrival -->
                    <div class="form-check mt-3">
                        <input asp-for="IsNewArrival" class="form-check-input" type="checkbox" />
                        <label asp-for="IsNewArrival" class="form-check-label">New Arrival?</label>
                    </div>

                    <!-- Buttons -->
                    <div class="d-flex justify-content-end mt-4">
                        <button type="button" class="btn btn-light me-2" id="cancelBtn">CANCEL</button>
                        <button type="submit" class="btn @(isEdit ? "btn-warning" : "btn-primary")">
                            @(isEdit ? "UPDATE PRODUCT" : "SAVE PRODUCT")
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Alerts -->
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger mt-3">
            <h5>Please correct the following errors:</h5>
            <div asp-validation-summary="All" class="text-danger"></div>
        </div>
    }
    @if (TempData["Success"] != null)
    {
        <script>
            $(document).ready(function() {
                toastr.success('@TempData["Success"]');
            });
        </script>
    }
    @if (TempData["Error"] != null)
    {
        <script>
            $(document).ready(function() {
                toastr.error('@TempData["Error"]');
            });
        </script>
    }

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
            let sizeIndex = document.querySelectorAll('#sizesContainer .size-input').length;

            const updateStockQuantity = () => {
                const quantityInputs = document.querySelectorAll('#sizesContainer input[name*=".Quantity"]');
                let total = 0;
                quantityInputs.forEach(input => {
                    const val = parseInt(input.value);
                    if (!isNaN(val)) total += val;
                });
                document.getElementById("StockQuantity").value = total;
            };

            document.getElementById("addSizeBtn").addEventListener("click", () => {
                const container = document.getElementById("sizesContainer");
                const html = `
                    <div class="input-group mb-2 size-input">
                        <input type="text" name="Sizes[${sizeIndex}].Size" class="form-control" placeholder="Enter size" required />
                        <input type="number" name="Sizes[${sizeIndex}].Quantity" class="form-control" placeholder="Quantity" required min="0" />
                        <button type="button" class="btn btn-danger btn-sm remove-size">âœ•</button>
                    </div>`;
                container.insertAdjacentHTML("beforeend", html);
                sizeIndex++;
                setTimeout(updateStockQuantity, 50);
            });

            document.getElementById("sizesContainer").addEventListener("input", function (e) {
                if (e.target.name.includes(".Quantity")) {
                    updateStockQuantity();
                }
            });

            document.getElementById("sizesContainer").addEventListener("click", function (e) {
                if (e.target.classList.contains("remove-size")) {
                    e.target.closest(".size-input").remove();
                    updateStockQuantity();
                }
            });

            document.getElementById("cancelBtn").addEventListener("click", () => {
                const form = document.getElementById("productForm");
                form.reset();
                document.getElementById("imagePreview").style.display = "none";
                document.getElementById("preview").src = "#";
                document.getElementById("sizesContainer").innerHTML = `
                    <div class="input-group mb-2 size-input">
                        <input type="text" name="Sizes[0].Size" class="form-control" placeholder="Enter size" required />
                        <input type="number" name="Sizes[0].Quantity" class="form-control" placeholder="Quantity" required min="0" />
                        <button type="button" class="btn btn-danger btn-sm remove-size">âœ•</button>
                    </div>`;
                sizeIndex = 1;
                updateStockQuantity();
            });

            document.getElementById("fileInput").addEventListener("change", function (e) {
                const file = e.target.files[0];
                if (file && (file.type === "image/jpeg" || file.type === "image/png")) {
                    const reader = new FileReader();
                    reader.onload = function (event) {
                        document.getElementById("preview").src = event.target.result;
                        document.getElementById("imagePreview").style.display = "block";
                    };
                    reader.readAsDataURL(file);
                } else {
                    toastr.error("Please select a JPEG or PNG image file.");
                    this.value = '';
                }
            });

            const dropZone = document.getElementById("dropZone");
            ["dragenter", "dragover", "dragleave", "drop"].forEach(event => {
                dropZone.addEventListener(event, e => {
                    e.preventDefault();
                    e.stopPropagation();
                });
            });

            ["dragenter", "dragover"].forEach(event => {
                dropZone.classList.add("border-primary");
            });

            ["dragleave", "drop"].forEach(event => {
                dropZone.classList.remove("border-primary");
            });

            dropZone.addEventListener("drop", function (e) {
                const file = e.dataTransfer.files[0];
                if (file && (file.type === "image/jpeg" || file.type === "image/png")) {
                    const reader = new FileReader();
                    reader.onload = function (event) {
                        document.getElementById("fileInput").files = e.dataTransfer.files;
                        document.getElementById("preview").src = event.target.result;
                        document.getElementById("imagePreview").style.display = "block";
                    };
                    reader.readAsDataURL(file);
                } else {
                    toastr.error("Please drop a JPEG or PNG image file.");
                }
            });

            // Initial stock count on page load
            updateStockQuantity();
        </script>
    }
</div>
